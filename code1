import numpy as np
import pandas as pd
from tensorflow.keras.preprocessing.sequence import pad_sequences
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Embedding, Conv1D, GlobalMaxPooling1D, Dense
from sklearn.metrics import accuracy_score
from sklearn.model_selection import train_test_split
# Loading audio and video dataset from CSV
audio_video_data = pd.read_csv('/coords.csv')

# Convert text to sequences of indices
X = [[word_to_index[word] for word in text.split()] for text in texts]
# Pad sequences to a fixed length
max_sequence_length = max(len(seq) for seq in X)
X = pad_sequences(X, maxlen=max_sequence_length, padding='post')
# Convert labels to numpy array
y = np.array(labels)

# Model architecture
model = Sequential([
    Embedding(len(vocab) + 1, 100, input_length=max_sequence_length),
    Conv1D(128, 5, activation='relu'),
    GlobalMaxPooling1D(),
    Dense(1, activation='sigmoid')
])

# Compile model
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

# Train model
model.fit(X_train, y_train, epochs=10, batch_size=32, validation_data=(X_test, y_test))
